// Mocks generated by Mockito 5.2.0 from annotations
// in flutter_project/test/infrastructure/repositories/product_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:flutter_project/src/infrastructure/data_sources/network/product/i_products_data_source.dart'
    as _i2;
import 'package:flutter_project/src/infrastructure/dtos/product/product_dto.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [IProductDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIProductDataSource extends _i1.Mock
    implements _i2.IProductDataSource {
  MockIProductDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<List<_i4.ProductDto>> watchAll() =>
      (super.noSuchMethod(Invocation.method(#watchAll, []),
              returnValue: Stream<List<_i4.ProductDto>>.empty())
          as _i3.Stream<List<_i4.ProductDto>>);
  @override
  _i3.Future<dynamic> update(_i4.ProductDto? product) =>
      (super.noSuchMethod(Invocation.method(#update, [product]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<dynamic> delete(_i4.ProductDto? productDto) =>
      (super.noSuchMethod(Invocation.method(#delete, [productDto]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
}
